{"version":3,"file":"static/js/682.d5db0326.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from './error.gif';\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img style={{display: 'block', width: '450px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='Error' />\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useEffect, useMemo, useRef } from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Spinner from \"../spinner/Spinner\";\n\nimport './comicsList.scss';\n\nconst setContent = (process, items, newItemLoading) => {\n\tswitch (process) {\n\t\tcase 'waiting':\n\t\t\treturn <Spinner />;\n\t\tcase 'loading':\n\t\t\treturn newItemLoading ? items : <Spinner />;\n\t\tcase 'error':\n\t\t\treturn <ErrorMessage />;\n\t\tcase 'confirmed':\n\t\t\treturn items;\n\t\tdefault:\n\t\t\tthrow new Error('Unexpected process state');\n\t}\n};\n\nconst ComicsList = () => {\n\n\tconst [comicsList, setComicsList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(0);\n\tconst [comicsEnded, setComicsEnded] = useState(false);\n\tconst isFirstRender = useRef(true);\n\n\tconst { getAllComics, process, setProcess } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tif (isFirstRender.current) {\n\t\t\tonRequest(offset, true);\n\t\t}\n\n\t\treturn () => {\n\t\t\tisFirstRender.current = false;\n\t\t}\n\t}, []);\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\n\t\tgetAllComics(offset)\n\t\t\t.then(onComicsListLoaded)\n\t\t\t.then(() => setProcess('confirmed'))\n\t\t\t.catch(err => console.log(err));\n\t};\n\n\tconst onComicsListLoaded = (newComicsList) => {\n\t\tlet ended = false;\n\t\tif (newComicsList.length < 8) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetComicsList(comicsList => [...comicsList, ...newComicsList]);\n\t\tsetNewItemLoading(false);\n\t\tsetOffset(offset => offset + 8);\n\t\tsetComicsEnded(ended);\n\t};\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\treturn (\n\t\t\t\t<li key={i} className=\"comics__item\">\n\t\t\t\t\t<Link to={`/comics/${item.id}`}>\n\t\t\t\t\t\t<img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n\t\t\t\t\t\t<div className=\"comics__item-name\">{item.title}</div>\n\t\t\t\t\t\t<div className=\"comics__item-price\">{item.price}</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<ul className=\"comics__grid\">\n\t\t\t\t{items}\n\t\t\t</ul>\n\t\t);\n\t}\n\n\tconst elements = useMemo(() => {\n\t\treturn setContent(process, renderItems(comicsList), newItemLoading)\n\t}, [process]);\n\n\treturn (\n\t\t<div className=\"comics__list\">\n\t\t\t{elements}\n\t\t\t<button\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\tstyle={{display: comicsEnded ? 'none' : 'block'}}\n\t\t\t\tdisabled={newItemLoading}>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta\r\n\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\tcontent=\"Page with list of our comics\"\r\n\t\t\t\t/>\r\n\t\t\t\t<title>Comics page</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<AppBanner/>\r\n\t\t\t<ComicsList/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ComicsPage;","import  {useState, useCallback} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\tconst [process, setProcess] = useState('waiting');\r\n\r\n\tconst request = useCallback(async (url, method = \"GET\", body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n\t\tsetProcess('loading');\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, {method, body, headers});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t} catch (e) {\r\n\t\t\tsetProcess('error');\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}, [])\r\n\r\n\tconst clearError = useCallback(() => {\r\n\t\tsetProcess('loading');\r\n\t}, []);\r\n\r\n\treturn {request, clearError, process, setProcess};\r\n}","import {useHttp} from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst {request, clearError, process, setProcess} = useHttp();\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=81c9ec44faf041042c369770623c2248';\r\n\tconst _baseOffset = 210;\r\n\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t}\r\n\r\n\t// Отдельный метод для поиска по имени\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t)\r\n\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t}\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 210)}...`\r\n\t\t\t\t: 'There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tclearError,\r\n\t\tprocess,\r\n\t\tsetProcess,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacterByName,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComic\r\n\t};\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t// Неизмененный классовый компонент\r\n// class MarvelService {\r\n// \t_apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n// \t_apiKey = 'apikey=81c9ec44faf041042c369770623c2248';\r\n// \t_baseOffset = 210;\r\n//\r\n// \tgetResource = async (url) => {\r\n// \t\tlet res = await fetch(url);\r\n//\r\n// \t\tif (!res.ok) {\r\n// \t\t\tthrow new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n// \t\t}\r\n//\r\n// \t\treturn await res.json();\r\n// \t}\r\n//\r\n// \tgetAllCharacters = async (offset = this._baseOffset) => {\r\n// \t\tconst res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n// \t\treturn res.data.results.map(this._transformCharacter);\r\n// \t}\r\n//\r\n// \tgetCharacter = async (id) => {\r\n// \t\tconst res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n// \t\treturn this._transformCharacter(res.data.results[0]);\r\n// \t}\r\n//\r\n// \t_transformCharacter = (char) => {\r\n// \t\treturn {\r\n// \t\t\tid: char.id,\r\n// \t\t\tname: char.name,\r\n// \t\t\tdescription: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n// \t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n// \t\t\thomepage: char.urls[0].url,\r\n// \t\t\twiki: char.urls[1].url,\r\n// \t\t\tcomics: char.comics.items\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\nexport default useMarvelService;"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","style","display","width","height","objectFit","margin","img","ComicsList","comicsList","setComicsList","useState","newItemLoading","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","isFirstRender","useRef","getAllComics","process","setProcess","useMarvelService","useEffect","current","onRequest","initial","then","onComicsListLoaded","catch","err","console","log","newComicsList","ended","length","elements","useMemo","setContent","items","Spinner","Error","arr","map","item","i","Link","to","concat","id","thumbnail","title","price","renderItems","onClick","disabled","ComicsPage","_Fragment","Helmet","name","content","request","clearError","useHttp","useCallback","async","url","method","arguments","undefined","body","headers","response","fetch","ok","status","json","e","_apiBase","_apiKey","_transformCharacter","char","description","slice","path","extension","homepage","urls","wiki","comics","_transformComics","_comics$textObjects$","pageCount","language","textObjects","prices","getAllCharacters","data","results","getCharacterByName","getCharacter","res","getComic"],"sourceRoot":""}